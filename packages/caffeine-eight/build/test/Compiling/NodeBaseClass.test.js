// Generated by CoffeeScript 1.12.7
(function() {
  var Node, Parser, assert, log, ref, ref1, ref2, wordsArray,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require("art-standard-lib"), log = ref.log, wordsArray = ref.wordsArray;

  ref1 = require("../../"), Parser = ref1.Parser, (ref2 = ref1.Nodes, Node = ref2.Node);

  assert = require("art-testbench").assert;

  test("with class", function() {
    var MyParser, mainNode;
    MyParser = (function(superClass) {
      var IndentBlocksNode;

      extend(MyParser, superClass);

      function MyParser() {
        return MyParser.__super__.constructor.apply(this, arguments);
      }

      MyParser.nodeBaseClass = IndentBlocksNode = (function(superClass1) {
        extend(IndentBlocksNode, superClass1);

        function IndentBlocksNode() {
          return IndentBlocksNode.__super__.constructor.apply(this, arguments);
        }

        IndentBlocksNode.prototype.toJs = function() {
          return this.toString() + "!";
        };

        return IndentBlocksNode;

      })(Node);

      MyParser.rule({
        root: /boo/
      });

      return MyParser;

    })(Parser);
    mainNode = MyParser.parse("boo");
    return assert.eq(mainNode.toJs(), "boo!");
  });

  test("with plainObject", function() {
    var MyParser, mainNode;
    MyParser = (function(superClass) {
      extend(MyParser, superClass);

      function MyParser() {
        return MyParser.__super__.constructor.apply(this, arguments);
      }

      MyParser.nodeBaseClass = {
        toJs: function() {
          return this.toString() + "!";
        }
      };

      MyParser.rule({
        root: /boo/
      });

      return MyParser;

    })(Parser);
    mainNode = MyParser.parse("boo");
    return assert.eq(mainNode.toJs(), "boo!");
  });

}).call(this);

//# sourceMappingURL=NodeBaseClass.test.js.map
