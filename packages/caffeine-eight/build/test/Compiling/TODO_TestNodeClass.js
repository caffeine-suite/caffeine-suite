// Generated by CoffeeScript 1.12.7
(function() {
  var IndentBlocksNode, MyNode, Node,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Node = require("../../Caffeine.Eight").Nodes.Node;

  module.exports = {
    NodeBaseClassTestNode: IndentBlocksNode = (function(superClass) {
      extend(IndentBlocksNode, superClass);

      function IndentBlocksNode() {
        return IndentBlocksNode.__super__.constructor.apply(this, arguments);
      }

      IndentBlocksNode.prototype.toJs = function() {
        return this.toString() + "!";
      };

      return IndentBlocksNode;

    })(Node),
    RuleGroupNodeBaseClassNode: MyNode = (function(superClass) {
      extend(MyNode, superClass);

      function MyNode() {
        return MyNode.__super__.constructor.apply(this, arguments);
      }

      MyNode.prototype.compile = function() {
        var a;
        return ((function() {
          var i, len, ref, results;
          ref = this.matches;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            a = ref[i];
            if (a.compile) {
              results.push(a.compile());
            }
          }
          return results;
        }).call(this)).join('');
      };

      return MyNode;

    })(Node)
  };

}).call(this);

//# sourceMappingURL=TODO_TestNodeClass.js.map
