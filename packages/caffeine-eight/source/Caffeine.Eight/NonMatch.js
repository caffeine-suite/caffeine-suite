// Generated by CoffeeScript 1.12.7
(function() {
  var BaseClass, NonMatch, defineModule, log, ref,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  ref = require('art-standard-lib'), log = ref.log, defineModule = ref.defineModule;

  BaseClass = require('art-class-system').BaseClass;

  defineModule(module, NonMatch = (function(superClass) {
    extend(NonMatch, superClass);

    function NonMatch(_node, _patternElement) {
      this._node = _node;
      this._patternElement = _patternElement;
    }

    NonMatch.getter("node patternElement", {
      inspectedObjects: function() {
        return {
          NonMatch: {
            patternElement: this.toString(),
            offset: this.node.offset
          }
        };
      }
    });

    NonMatch.prototype.toString = function() {
      return this.patternElement.ruleVariant.toString();
    };

    return NonMatch;

  })(BaseClass));

}).call(this);
