import &ArtStandardLib

class Repl
  @caffeineEightRepl: (parser, options) ->
    parser = new parser if isClass parser

    ## Why realRequire?
      In order to use CaffeineEight in the browser, we have to 'hide' any nodejs-specific requires.
      Why? At build-time, webpack attempts to resolve all 'require' statements even if they will never be executed.
      We just need to 'hide' these requires from webpack.
    realRequire = eval :require

    try realRequire :colors

    if options?.load
      log "" TODO: load, parse and evaluate these files: #{options.load.join ', '}

    log "START"
    realRequire :repl
    .start
      prompt: "#{parser.getClassName()}> ".grey
      eval: (command, context, filename, callback) ->
        try
          result = parsed = parser.parse command.trim()
          try
            log if parsed.evaluate is Function then parsed.evaluate() else parsed
            callback()

          catch error
            callback error

        catch error
          log
            parser.getParseFailureInfo {} error, color: true, options?.verbose
            .replace :<HERE> "<HERE>".red
          callback()
