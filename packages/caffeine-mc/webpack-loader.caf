import &ArtFoundation
&CaffeineMc
&LoaderUtils
out = (source) ->
  @cacheable?()

  coffeeRequest = loaderUtils.getRemainingRequest(this);
  jsRequest = loaderUtils.getCurrentRequest @
  var query = loaderUtils.parseQuery @query
  try
    result = CaffeineMc.compile
      source
      literate: query.literate
      sourceFile: coffeeRequest
      debug: @debug
      # sourceMap: true
  catch e
    log.error "CaffeineMc error": e
    throw e

  #   var err = "";
  #   if (e.location == null || e.location.first_column == null || e.location.first_line == null) {
  #     err += "Got an unexpected exception from the coffee-script compiler. The original exception was: " + e + "\n";
  #     err += "(The coffee-script compiler should not raise *unexpected* exceptions. You can file this error as an issue of the coffee-script compiler: https://github.com/jashkenas/coffee-script/issues)\n";
  #   } else {
  #     var codeLine = source.split("\n")[e.location.first_line];
  #     var offendingCharacter = (e.location.first_column < codeLine.length) ? codeLine[e.location.first_column] : "";
  #     err += e + "\n";
  #     // log erroneous line and highlight offending character
  #     err += "    L" + e.location.first_line + ": " + codeLine.substring(0, e.location.first_column) + offendingCharacter + codeLine.substring(e.location.first_column + 1) + "\n";
  #     err += "         " + (new Array(e.location.first_column + 1).join(" ")) + "^\n";
  #   }
  #   throw new Error(err);
  # }

  @callback null, result.js, map

out.seperable = true

out