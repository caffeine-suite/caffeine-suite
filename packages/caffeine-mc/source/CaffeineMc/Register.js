// Generated by CoffeeScript 1.12.7
(function() {
  var CaffeineMc, Register, defineModule, log, realRequire, ref;

  ref = require('art-standard-lib'), defineModule = ref.defineModule, log = ref.log;

  realRequire = eval('require');

  CaffeineMc = require('./namespace');

  defineModule(module, Register = (function() {
    function Register() {}

    Register.verbose = false;

    Register.register = function() {
      var base, ext, i, len, name, ref1;
      if (!realRequire.extensions) {
        throw new Error("please update NODE.js");
      }
      ref1 = CaffeineMc.fileExtensions;
      for (i = 0, len = ref1.length; i < len; i++) {
        ext = ref1[i];
        (base = realRequire.extensions)[name = "." + ext] || (base[name] = function(module, filename) {
          var answer, error;
          try {
            if (Register.verbose) {
              log({
                loading: filename
              });
            }
            answer = CaffeineMc.compileFileSync(filename, {
              inlineMap: true,
              sourceRoot: "",
              cache: true
            });
          } catch (error1) {
            error = error1;
            CaffeineMc.displayError(error);
            if (Register.verbose) {
              module._compile("throw new Error('CaffeineMc: error compiling " + filename + "');", filename);
            }
          }
          if (answer != null) {
            try {
              return module._compile(answer.compiled.js, filename);
            } catch (error1) {
              error = error1;
              CaffeineMc.displayError(error);
              if (Register.verbose) {
                log({
                  "caffeine-mc-compile": {
                    filename: filename,
                    answer: answer
                  }
                });
                return module._compile("\nthrow new Error('CaffeineMc: error evaluating: " + filename + "');\n", filename);
              }
            }
          }
        });
      }
      return CaffeineMc;
    };

    return Register;

  })());

}).call(this);
