// Generated by CoffeeScript 1.12.7
(function() {
  var ErrorWithInfo, Promise, cacheExpiresIn, cacheRead, cacheWrite, currentSecond, dashCase, defineModule, each, find, log, merge, mergeInto, peek, present, ref, resetWorkingCache, upperCamelCase, w, workingCache, workingCacheLastResetAt;

  ref = require('art-standard-lib'), defineModule = ref.defineModule, peek = ref.peek, Promise = ref.Promise, dashCase = ref.dashCase, upperCamelCase = ref.upperCamelCase, ErrorWithInfo = ref.ErrorWithInfo, log = ref.log, merge = ref.merge, present = ref.present, find = ref.find, each = ref.each, w = ref.w, mergeInto = ref.mergeInto, currentSecond = ref.currentSecond;

  workingCache = null;

  cacheExpiresIn = 1;

  workingCacheLastResetAt = currentSecond() - cacheExpiresIn * 10;

  module.exports = {
    checkWorkingCacheExpiration: function() {
      if (currentSecond() - workingCacheLastResetAt > cacheExpiresIn) {
        return resetWorkingCache();
      }
    },
    resetWorkingCache: resetWorkingCache = function() {
      return workingCache = {};
    },
    cacheRead: cacheRead = function(key, p) {
      var ref1;
      return (ref1 = workingCache[key]) != null ? ref1[p] : void 0;
    },
    cacheWrite: cacheWrite = function(key, p, v) {
      return (workingCache[key] != null ? workingCache[key] : workingCache[key] = {})[p] = v;
    },
    cacheable: function(key, f) {
      return function(p) {
        var v;
        if ((v = cacheRead(key, p)) != null) {
          return v;
        } else {
          return cacheWrite(key, p, f(p));
        }
      };
    }
  };

  resetWorkingCache();

}).call(this);
