# to-eol-comments
## block-comments
  Cupcake ipsum dolor sit. Amet chocolate bar soufflé oat cake tootsie
  roll liquorice. Chocolate cake chocolate cake macaroon caramels
  chocolate cake. Chocolate bar chocolate bar toffee icing.

  ## Block-comment a block-comment without breaking code.

# word-strings (terminated before: space, (), [] or ','
  :alice  # word-string == "alice"
  #ff7f00 # hash-string == "#ff7f00"
  123px   # unit-string == "123px"

# bracketed, "traditional" strings
  "hi"
  'that'

# to-EOL-strings
  "" sdf

# block-strings
  ""
    Cupcake ipsum dolor sit. Amet chocolate bar soufflé oat cake tootsie
    roll liquorice. Chocolate cake chocolate cake macaroon caramels
    chocolate cake. Chocolate bar chocolate bar toffee icing.

    ""
      Wrap a string in another string without escaping.

# string escapes
  'this\nwas'
  :hi\nthere

# string interpolation
  "" hi #{foo.bar}

# regular expressions
/ignore case/i
///i ignore \_ case
///
  # block regex can have comments
  # and white-space is ignored...
  abc
  #{foo.bar}
  #{} 2**64
  def

# object literal properties
abc:                123
a-b-c:              123
.abc:               123
"hi there":         123
support@home.com:   "" emails are fine
http://home.com:    "" URLs are fine

# property access
abc.foo

# keywords
array til 10 by 2

