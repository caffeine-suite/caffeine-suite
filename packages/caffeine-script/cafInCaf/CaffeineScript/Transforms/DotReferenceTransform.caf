import &StandardImport, &CaffeineEight

depthFirstTransformR = (stn, transform) ->
  try
    newChildren = null
    each child, i in-array stn extract children
      if child != newChild = depthFirstTransformR child, transform
        newChildren ?= children.slice()
        newChild.props.label = child.label
        newChildren[i] = newChild

    transform stn.withChildren newChildren || children

  catch e
    e.stn ?= stn
    throw e

depthFirstTransform = (stn, transform) ->
  try
    depthFirstTransformR stn, transform

  catch e
    if e.stn
      ce = e.stn.parseTreeNode.parser.generateCompileError {}
        failureIndex: e.stn.sourceOffset
        errorType:    :Transform
        e.message
        e.info

      ce.stack = e.stack
      throw ce

    else throw e

(stn) ->
  depthFirstTransform stn, (stn) ->
    if stn.type == :DotReference
      throw new Error "DotReference is not supported yet."
    stn
