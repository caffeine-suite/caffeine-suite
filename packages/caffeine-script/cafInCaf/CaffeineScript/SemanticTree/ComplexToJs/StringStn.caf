import &StandardImport, &Lib

class StringStn extends &BaseStn

  toJs: (options) ->
    out =
      escapeJavascriptString
        deescapeSpaces @value
      .replace /\\\\/g, '\\'
    if options?.dotBase
      "(#{out})"
    else out

  compactNewLines: (compactLeft, compactRight) ->
    @props.value = @value.replace /^\ *\n */, '' if compactLeft
    @props.value = @value.replace /\ *\n *$/, '' if compactRight
    @props.value = @value.replace /(\ *\n *)+/g, " "
    @

  trimLeft: -> @props.value = @value.trimLeft()
  trimRight: -> @props.value = @value.trimRight()

  @getter
    value: -> @props.value

  toInterpolatedJsStringPart: ->
    deescapeSpaces escapeUnescaped
      escapeMustEscapes @value
      "`$\n"