import &StandardImport

legalUnquotedPropName = /^(0|[1-9][0-9]*|[a-z_][0-9_a-z]*)$/i

escapePropName = (rawPropName) ->
  if rawPropName.match legalUnquotedPropName
    rawPropName
  else
    escapeJavascriptString rawPropName

class ObjectPropNameStn extends &BaseStn

  constructor: ->
    super
    [nameStn] = @children

    # NOTE: props.value is used by SuperStn even it if isn't used in @toJs here.
    @props.value ||= if nameStn
      nameStn.toJs() # TODO: we should validate
    else
      @parseTreeNode.toString()

  toJs: ->
    [nameStn] = @children
    if nameStn
      str = nameStn.toJs()
      if nameStn.children.length > 0
        "[#{str}]"
      else
        unless nameStn.type == "String" || nameStn.type == "Identifer"
          throw new Error "internal error - should be a StringStn or IdentifierStn. Actual type: #{nameStn.type}"
        str
    else
      escapePropName @props.value
