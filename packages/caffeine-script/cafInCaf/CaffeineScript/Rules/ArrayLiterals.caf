import &StandardImport, &BabelBridge

->
  @rule

    array:
      "openBracket_ valueListBlock _closeBracket"
      pattern: "'[]' _? valueListToEolAndBlock", getImplicitArray: ~> false # TODO: I shouldn't need to add this getImplicitArray!
      "'[]'"

    brackedArray:
      "openBracket_ valueList _comma_? _closeBracket"

    implicitArray:
      {}
        pattern:          "start:expression _comma_ valueList _comma_?"
        getImplicitArray: ~> @
        stnFactory:       :ArrayStn
        stnProps:         implicitArray: true

      {}
        pattern:          "start:literal _ valueList _comma_?"
        getImplicitArray: ~> @
        stnFactory:       :ArrayStn
        stnProps:         implicitArray: true

    {}
      stnFactory: :ArrayStn

  @rule
    valueListBlock:         Extensions.IndentBlocks.getPropsToSubparseBlock rule: "valueListBlockSubParse"
    valueListToEolAndBlock: Extensions.IndentBlocks.getPropsToSubparseToEolAndBlock rule: "valueListBlockSubParse"
    valueListBlockSubParse: "end* listItemStatement*"

  @rule
    valueList:
      {} pattern: "element:listItemExpression _comma_ valueList"
      {} pattern: "element:literal _ valueList"
      {} pattern: "element:listItemExpression"

  @rule
    listItemStatement:
      {}
        pattern: "statementWithoutEnd newLineStatementExtension* ellipsis end"
        stnFactory: :ArraySpreadElementStn
      {}
        pattern: "statementWithoutEnd newLineStatementExtension* end"

    listItemExpression:
      {}
        pattern: "expression ellipsis"
        stnFactory: :ArraySpreadElementStn
      {}
        pattern: "expression"
