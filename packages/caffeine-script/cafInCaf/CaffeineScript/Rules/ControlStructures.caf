import &StandardImport, &CaffeineEight

->
  @rule
    controlStatement:
      "ifUnlessWhileUntil _ expression:expressionWithOneLessBlock body:block             elseBody:elseClause?"
      "ifUnlessWhileUntil _ expression:expressionWithOneLessBlock body:block?            elseBody:elseClause"
      "ifUnlessWhileUntil _ expression:expression _ thenDo _      body:implicitArrayOrExpression elseBody:elseClause?"
    {}
      stnFactory: :ControlOperatorStn
      stnProps: ~>
        operand:    @ifUnlessWhileUntil.toString()
        joiner:     @thenDo?.toString()

  @rule
    controlStatement:
      "/try/ _ body:implicitArrayOrExpression _? optionalCatch:catchClause?"
      "/try/ body:block optionalCatch:catchClause?"
    {} stnFactory: :TryStn

  @rule
    catchClause:
      "_end? /catch/ _ errorIdentifier:identifier body:block?"
      "_end? /catch/ _? body:block?"
      # this won't be hard to do, but - ZEN
      # "_end? catchMethod:/rescue/ _? body:expression"
    {} stnFactory: :CatchStn

  @rule
    controlStatement:
      pattern: "/do/ _ functionDefinition"
      stnFactory: :DoStn

  @rule
    controlStatement:
      "/switch/ _ condition:expressionWithOneLessBlock? _? switchBodyBlock"
      "/switch/ _ condition:expression? switchBody"
      "/switch/ switchBodyBlock"
      "/switch/ switchBody"
    {} stnFactory: :SwitchStn

  @rule
    switchBody: "switchWhen:switchWhenClause+ switchElse:elseClause?"
    thenClause: "_ /then/ _ lineOfStatements"

    switchBodyBlock:  Extensions.IndentBlocks.getPropsToSubparseBlock rule: :switchBody

  @rule
    switchWhenClause:
      "end? when _ whenValue:expressionWithOneLessBlock thenDo:block"
      "end? when _ whenValue:implicitArrayOrExpression thenDo:thenClause"
    {} stnFactory: :SwitchWhenStn

  @rule
    ifUnlessWhileUntil: /if|unless|while|until/
    thenDo:             /then|do/
    when:               /when/

    elseClause:
      "controlStructorClauseJoiner /else/ block"
      "controlStructorClauseJoiner /else/ _ implicitArrayOrExpression"

    controlStructorClauseJoiner:
      "/ +/"
      "end"
