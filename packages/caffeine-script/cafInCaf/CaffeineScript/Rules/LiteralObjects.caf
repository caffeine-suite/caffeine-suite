|caffeine-script
import &ArtFoundation, &BabelBridge, &SemanticTree

->
  @rule
    singleOrMultilineImplicitObject:
      :multilineImplicitObject
      :object

  @rule

    object:
      "openCurly_ props:propertyList _closeCurly"
      "props:implicitObject"
      "'{}' _? props:propertyList"
      "'{}' _? props:objectLiteralBlock"
      "'{}'"

    multilineImplicitObject:
      pattern: "!implicitObjectWithTwoOrMorePropsOnOneLine valuePropWithComplexExpression multilineImplicitObjectExtension+"

    {}
      getStn: ->
        children = array m in @getMatchStns()
          if m instanceof ObjectStn.class
            m.children
          else
            m

        ObjectStn children

  @rule
    multilineImplicitObjectExtension:
      "end+ !implicitObjectWithTwoOrMorePropsOnOneLine valuePropWithComplexExpression"

    objectLiteralBlock: Extensions.IndentBlocks.getPropsToSubparseToEolAndBlock rule: "singleOrMultilineImplicitObject"

    implicitObject:
      pattern: "propertyList"

    implicitObjectWithTwoOrMorePropsOnOneLine:
      "literalProp _ propertyList"
      "valueProp _comma_ propertyList"

    propertyList:
      "valueProp _comma_ propertyList"
      "literalProp _ propertyList"
      "valuePropWithComplexExpression"

  @rule
    literalProp:  "propName _colon_ propValue:literal"
    valueProp:    "propName _colon_ propValue:expression"

    valuePropWithComplexExpression:
      "propName _colon_ propValue:complexExpression"
      "propName _colon_ propValue:propertyValueBlock"

    {}
      name: "literalObjectProperty"
      stnFactory: "ObjectPropValueStn"

  @rule
    propertyValueBlock: "rValueBlock"
    propName: pattern: "computedPropName"
    computedPropName:
      pattern: "openBracket_ expression _closeBracket"
      stnFactory: "AccessorStn"

  @rule
    stringLiteralPropNameTail: [
      "_ /:/ !unquotedString"
      "/:/"
    ]

  @rule
    propName:
      "!/then\\s/ str:identifier &_colon_"
      "!/then\\s/ str:unquotedString &/:/"
      "str:stringLiteral &stringLiteralPropNameTail"

    {}
      stnFactory: "ObjectPropNameStn"

